[
  {
    "query": "대출 중인 도서의 반납 예정일을 다음 주 금요일로 변경해줘",
    "level": "Intermediate",
    "type": "UPDATE",
    "sql": "UPDATE sample SET due_date = date('now', 'weekday 5') WHERE loan_status = '대출 중'",
    "retry_count": 1
  },
  {
    "query": "현재 대출 중인 책의 제목을 출판 연도 순으로 10개만 보여줘",
    "level": "Intermediate",
    "type": "SELECT",
    "sql": "SELECT book_title FROM sample WHERE loan_status = '대출 중' ORDER BY created_at LIMIT 10",
    "retry_count": 1
  },
  {
    "query": "신규 도서를 도서관 카탈로그에 등록해줘",
    "level": "Intermediate",
    "type": "INSERT",
    "sql": "INSERT INTO sample (book_id, created_at, updated_at, book_title, author, isbn, book_genre, book_publisher, book_language) VALUES (1, '2023-10-01 10:00:00', '2023-10-01 10:00:00', 'New Book Title', 'Author Name', '1234567890123', 'Fiction', 'Publisher Name', 'English')",
    "retry_count": 1
  },
  {
    "query": "ISBN이 978-3-16-148410-0인 책의 제목을 '파이썬 프로그래밍'으로 변경해줘",
    "level": "Advanced",
    "type": "UPDATE",
    "sql": "UPDATE sample SET book_title='파이썬 프로그래밍' WHERE isbn='978-3-16-148410-0'",
    "retry_count": 1
  },
  {
    "query": "대출 중인 책 중 반납일이 지난 책의 제목과 반납 예정일을 반납 예정일 순으로 정렬해줘",
    "level": "Intermediate",
    "type": "SELECT",
    "sql": "SELECT book_title, due_date FROM sample WHERE loan_status = '대출 중' AND due_date < datetime('now') ORDER BY due_date",
    "retry_count": 1
  },
  {
    "query": "불필요한 중복된 주소 정보를 가진 회원 기록을 삭제해줘",
    "level": "Expert",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE rowid NOT IN (SELECT MIN(rowid) FROM sample GROUP BY member_email, member_phone)",
    "retry_count": 1
  },
  {
    "query": "손상된 책 목록에서 모든 책을 삭제해줘",
    "level": "Expert",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE notes LIKE '%손상%'",
    "retry_count": 1
  },
  {
    "query": "회원별 대출 횟수를 계산하여 5회 이상 대출한 회원의 이름과 대출 횟수를 보여줘",
    "level": "Basic",
    "type": "SELECT",
    "sql": "SELECT member_name, COUNT(*) AS loan_count FROM sample GROUP BY member_name HAVING loan_count >= 5",
    "retry_count": 1
  },
  {
    "query": "대출 기간이 1년을 초과한 기록을 삭제해줘",
    "level": "Basic",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE loan_date < DATE('now', '-1 year')",
    "retry_count": 1
  },
  {
    "query": "가장 많이 대출된 도서 3권의 제목과 대출 횟수를 보여줘",
    "level": "Basic",
    "type": "SELECT",
    "sql": "SELECT book_title, COUNT(*) AS loan_count FROM sample GROUP BY book_title ORDER BY loan_count DESC LIMIT 3",
    "retry_count": 1
  },
  {
    "query": "새로운 대출 기록을 시스템에 입력해 주세요",
    "level": "Advanced",
    "type": "INSERT",
    "sql": "INSERT INTO sample (id, created_at, updated_at, book_id, member_id, loan_date, return_date, due_date, book_title, author, isbn, member_name, member_email, member_phone, book_genre, book_publisher, book_language, loan_status, fine_amount, staff_id, notes) VALUES (NULL, '2023-10-01 10:00:00', '2023-10-01 10:00:00', 1, 1, '2023-10-01 10:00:00', NULL, '2023-10-15 10:00:00', 'Sample Book Title', 'Sample Author', '1234567890123', 'Sample Member', 'member@example.com', '123-456-7890', 'Fiction', 'Sample Publisher', 'English', 'On Loan', 0.00, 1, 'New loan record')",
    "retry_count": 1
  },
  {
    "query": "회원 가입 후 1년 동안 대출 기록이 없는 회원을 삭제해줘",
    "level": "Expert",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE member_id IN (SELECT member_id FROM sample WHERE created_at <= datetime('now', '-1 year') GROUP BY member_id HAVING COUNT(loan_date) = 0)",
    "retry_count": 1
  },
  {
    "query": "반납 상태인 도서의 대출 상태를 대출 중으로 변경해줘",
    "level": "Intermediate",
    "type": "UPDATE",
    "sql": "UPDATE sample SET loan_status='대출 중' WHERE loan_status='반납'",
    "retry_count": 1
  },
  {
    "query": "연체일이 30일을 초과한 대출 기록들을 삭제해줘",
    "level": "Expert",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE loan_status = 'overdue' AND julianday('now') - julianday(due_date) > 30",
    "retry_count": 1
  },
  {
    "query": "특정 대출 기록의 반납 날짜를 일주일 연장해줘",
    "level": "Expert",
    "type": "UPDATE",
    "sql": "UPDATE sample SET return_date = DATE(return_date, '+7 days') WHERE id = ?",
    "retry_count": 5,
    "error_msg": "Incorrect number of bindings supplied. The current statement uses 1, and there are 0 supplied."
  },
  {
    "query": "회원 중 가장 많은 대출 기록을 가진 사람의 이름과 총 대출 횟수를 알려줘",
    "level": "Expert",
    "type": "SELECT",
    "sql": "SELECT member_name, COUNT(*) AS total_loans FROM sample GROUP BY member_id ORDER BY total_loans DESC LIMIT 1",
    "retry_count": 1
  },
  {
    "query": "이용 횟수가 1회 이하인 책들을 삭제해줘",
    "level": "Advanced",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE book_id IN (SELECT book_id FROM sample GROUP BY book_id HAVING COUNT(*) <= 1)",
    "retry_count": 1
  },
  {
    "query": "대출 기록이 5년 이상된 항목을 삭제해줘",
    "level": "Expert",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE loan_date < datetime('now', '-5 years')",
    "retry_count": 1
  },
  {
    "query": "지난 한 달 동안 신규 등록된 회원의 이름과 가입 날짜를 가입 날짜 순서로 나열해줘",
    "level": "Intermediate",
    "type": "SELECT",
    "sql": "SELECT member_name, created_at FROM sample WHERE created_at >= date('now', '-1 month') ORDER BY created_at",
    "retry_count": 1
  },
  {
    "query": "새로운 도서를 도서 목록에 추가해줘",
    "level": "Basic",
    "type": "INSERT",
    "sql": "INSERT INTO sample (created_at, updated_at, book_id, book_title, author, isbn, book_genre, book_publisher, book_language) VALUES (CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 1, 'New Book Title', 'Author Name', '1234567890123', 'Genre', 'Publisher', 'Language')",
    "retry_count": 1
  },
  {
    "query": "5년 이상 된 회원 정보를 삭제해줘",
    "level": "Basic",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE member_id IN (SELECT member_id FROM sample WHERE created_at <= datetime('now', '-5 years'))",
    "retry_count": 1
  },
  {
    "query": "현재 대출 중인 책의 제목과 대출일을 대출일 역순으로 10개만 보여줘",
    "level": "Advanced",
    "type": "SELECT",
    "sql": "SELECT book_title, loan_date FROM sample WHERE loan_status = '대출 중' ORDER BY loan_date DESC LIMIT 10",
    "retry_count": 1
  },
  {
    "query": "대출 ID가 456인 이력의 반납일을 2023-12-01로 업데이트해줘",
    "level": "Advanced",
    "type": "UPDATE",
    "sql": "UPDATE sample SET return_date='2023-12-01' WHERE id=456",
    "retry_count": 1
  },
  {
    "query": "지난 1년간 가장 많이 대출된 도서의 제목과 대출 횟수를 확인해줘",
    "level": "Expert",
    "type": "SELECT",
    "sql": "SELECT book_title, COUNT(*) AS loan_count FROM sample WHERE loan_date >= DATE('now', '-1 year') GROUP BY book_title ORDER BY loan_count DESC LIMIT 1",
    "retry_count": 1
  },
  {
    "query": "반납 기한을 초과한 대출 기록을 삭제해줘",
    "level": "Advanced",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE return_date > due_date",
    "retry_count": 1
  },
  {
    "query": "월별 대출된 도서 수를 계산하고, 100권 이상 대출된 달만 보여줘",
    "level": "Expert",
    "type": "SELECT",
    "sql": "SELECT strftime('%Y-%m', loan_date) AS loan_month, COUNT(*) AS loan_count FROM sample GROUP BY loan_month HAVING loan_count >= 100",
    "retry_count": 1
  },
  {
    "query": "미반납 상태인 도서의 제목을 출판 연도 순으로 정렬해 보여줘",
    "level": "Expert",
    "type": "SELECT",
    "sql": "SELECT book_title FROM sample WHERE loan_status = '미반납' ORDER BY CAST(SUBSTR(isbn, 1, 4) AS INTEGER)",
    "retry_count": 1
  },
  {
    "query": "대출 기록이 없는 회원의 이름과 가입일을 최근 가입 순으로 보여줘",
    "level": "Advanced",
    "type": "SELECT",
    "sql": "SELECT DISTINCT member_name, created_at FROM sample WHERE member_id NOT IN (SELECT DISTINCT member_id FROM sample WHERE loan_date IS NOT NULL) ORDER BY created_at DESC",
    "retry_count": 1
  },
  {
    "query": "회원 아이디가 123인 사용자의 연락처를 010-1234-5678로 수정해줘",
    "level": "Basic",
    "type": "UPDATE",
    "sql": "UPDATE sample SET member_phone='010-1234-5678' WHERE member_id=123",
    "retry_count": 1
  },
  {
    "query": "특정 회원의 대출 가능 권수를 10권으로 수정해줘",
    "level": "Expert",
    "type": "UPDATE",
    "sql": "UPDATE sample SET loan_status='가능' WHERE member_id=10",
    "retry_count": 2
  },
  {
    "query": "신규 회원 정보를 데이터베이스에 등록해 주세요",
    "level": "Advanced",
    "type": "INSERT",
    "sql": "INSERT INTO sample (member_id, member_name, member_email, member_phone) VALUES (?, ?, ?, ?)",
    "retry_count": 5,
    "error_msg": "Incorrect number of bindings supplied. The current statement uses 4, and there are 0 supplied."
  },
  {
    "query": "모든 대출 기간이 만료된 기록을 삭제해줘",
    "level": "Advanced",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE return_date < datetime('now')",
    "retry_count": 1
  },
  {
    "query": "회원 ID가 123인 사용자의 연락처를 010-1234-5678로 수정해줘",
    "level": "Advanced",
    "type": "UPDATE",
    "sql": "UPDATE sample SET member_phone='010-1234-5678' WHERE member_id=123",
    "retry_count": 1
  },
  {
    "query": "현재 대출 가능하지 않은 책들을 삭제해줘",
    "level": "Basic",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE loan_status != 'available'",
    "retry_count": 1
  },
  {
    "query": "분실된 책 목록에서 '해리포터와 불의 잔'을 삭제해주세요",
    "level": "Basic",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE book_title = '해리포터와 불의 잔' AND loan_status = '분실'",
    "retry_count": 1
  },
  {
    "query": "반납 기한을 지나치게 초과한 대출 기록을 삭제해줘",
    "level": "Intermediate",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE return_date > due_date",
    "retry_count": 1
  },
  {
    "query": "도서 ID가 789인 책의 저자를 '이순신'으로 변경해줘",
    "level": "Advanced",
    "type": "UPDATE",
    "sql": "UPDATE sample SET author='이순신' WHERE book_id=789",
    "retry_count": 1
  },
  {
    "query": "지난 1년 동안 가장 많이 대출된 책의 제목과 대출 횟수를 보여줘",
    "level": "Advanced",
    "type": "SELECT",
    "sql": "SELECT book_title, COUNT(*) AS loan_count FROM sample WHERE loan_date >= DATE('now', '-1 year') GROUP BY book_title ORDER BY loan_count DESC LIMIT 1",
    "retry_count": 1
  },
  {
    "query": "2021년 이후 대출된 도서의 제목을 대출일 순으로 10개만 보여줘",
    "level": "Basic",
    "type": "SELECT",
    "sql": "SELECT book_title FROM sample WHERE loan_date >= '2021-01-01' ORDER BY loan_date LIMIT 10",
    "retry_count": 1
  },
  {
    "query": "현재 대출 중인 책 정보를 삭제해줘",
    "level": "Advanced",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE loan_status = '대출 중'",
    "retry_count": 1
  },
  {
    "query": "회원이 탈퇴한 경우 해당 회원의 대출 기록을 삭제해줘",
    "level": "Intermediate",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE member_id = ?",
    "retry_count": 5,
    "error_msg": "Incorrect number of bindings supplied. The current statement uses 1, and there are 0 supplied."
  },
  {
    "query": "특정 회원의 주소를 서울특별시로 업데이트 해줘",
    "level": "Intermediate",
    "type": "UPDATE",
    "sql": "UPDATE sample SET member_address='서울특별시' WHERE member_id=특정회원ID",
    "retry_count": 5,
    "error_msg": "no such column: member_address"
  },
  {
    "query": "10년 이상 대출되지 않은 책들을 삭제해줘",
    "level": "Intermediate",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE book_id IN (SELECT book_id FROM sample WHERE loan_date < DATE('now', '-10 years'))",
    "retry_count": 1
  },
  {
    "query": "신규 회원 정보를 시스템에 등록해줘",
    "level": "Basic",
    "type": "INSERT",
    "sql": "INSERT INTO sample (created_at, updated_at, member_id, member_name, member_email, member_phone) VALUES (datetime('now'), datetime('now'), 1, '홍길동', 'hong@example.com', '010-1234-5678')",
    "retry_count": 1
  },
  {
    "query": "회원 가입일이 5년 이상 지난 회원들을 삭제해줘",
    "level": "Advanced",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE created_at <= datetime('now', '-5 years')",
    "retry_count": 1
  },
  {
    "query": "새로운 회원의 정보를 도서관 시스템에 추가해줘",
    "level": "Expert",
    "type": "INSERT",
    "sql": "INSERT INTO sample (created_at, updated_at, member_id, member_name, member_email, member_phone) VALUES (datetime('now'), datetime('now'), 1, '홍길동', 'hong@example.com', '010-1234-5678')",
    "retry_count": 5
  },
  {
    "query": "홍길동 회원의 대출 가능 권수를 5권으로 늘려줘",
    "level": "Intermediate",
    "type": "UPDATE",
    "sql": "UPDATE sample SET notes='대출 가능 권수 5권으로 변경' WHERE member_name='홍길동'",
    "retry_count": 1
  },
  {
    "query": "연체료가 100달러 이상인 기록을 삭제해줘",
    "level": "Basic",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE fine_amount >= 100.00",
    "retry_count": 1
  },
  {
    "query": "반납이 지연된 도서의 제목과 반납 예정일을 반납 예정일 순으로 보여줘",
    "level": "Basic",
    "type": "SELECT",
    "sql": "SELECT book_title, due_date FROM sample WHERE return_date > due_date ORDER BY due_date",
    "retry_count": 1
  },
  {
    "query": "회원 이름이 '홍길동'인 사용자의 주소를 '서울특별시 강남구'로 수정해줘",
    "level": "Advanced",
    "type": "UPDATE",
    "sql": "UPDATE sample SET notes='서울특별시 강남구' WHERE member_name='홍길동'",
    "retry_count": 1
  },
  {
    "query": "도서 제목이 '해리포터'인 책의 대출 가능 수량을 3으로 변경해줘",
    "level": "Basic",
    "type": "UPDATE",
    "sql": "UPDATE sample SET loan_status='대출 가능', notes='대출 가능 수량: 3' WHERE book_title='해리포터'",
    "retry_count": 1
  },
  {
    "query": "회원 등급별 평균 대출 횟수를 계산해줘",
    "level": "Expert",
    "type": "SELECT",
    "sql": "SELECT member_name, COUNT(*) / COUNT(DISTINCT member_id) AS avg_loans_per_member FROM sample GROUP BY member_name",
    "retry_count": 2
  },
  {
    "query": "특정 회원의 이메일 주소를 최신 정보로 업데이트해줘",
    "level": "Expert",
    "type": "UPDATE",
    "sql": "UPDATE sample SET member_email='new_email@example.com' WHERE member_id=123",
    "retry_count": 1
  },
  {
    "query": "지정된 도서의 대출 상태를 반납 완료로 변경해줘",
    "level": "Expert",
    "type": "UPDATE",
    "sql": "UPDATE sample SET loan_status='반납 완료' WHERE book_id=지정된_도서_ID",
    "retry_count": 5,
    "error_msg": "no such column: 지정된_도서_ID"
  },
  {
    "query": "2022년에 가입한 회원들의 이름과 회원 번호를 알파벳 순서로 정렬해서 보여줘",
    "level": "Advanced",
    "type": "SELECT",
    "sql": "SELECT DISTINCT member_name, member_id FROM sample WHERE strftime('%Y', created_at) = '2022' ORDER BY member_name ASC",
    "retry_count": 1
  },
  {
    "query": "ISBN이 '978-3-16-148410-0'인 책의 저자를 '조앤 롤링'으로 수정해줘",
    "level": "Basic",
    "type": "UPDATE",
    "sql": "UPDATE sample SET author='조앤 롤링' WHERE isbn='978-3-16-148410-0'",
    "retry_count": 1
  },
  {
    "query": "연체된 지 6개월 이상 된 대출 기록을 삭제해줘",
    "level": "Intermediate",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE loan_status = 'overdue' AND return_date < date('now', '-6 months')",
    "retry_count": 1
  },
  {
    "query": "회원 이름이 '김철수'인 사용자의 주소를 '서울시 강남구'로 바꿔줘",
    "level": "Basic",
    "type": "UPDATE",
    "sql": "UPDATE sample SET member_phone='서울시 강남구' WHERE member_name='김철수'",
    "retry_count": 3
  },
  {
    "query": "새로운 도서를 도서 목록에 추가해 주세요",
    "level": "Advanced",
    "type": "INSERT",
    "sql": "INSERT INTO sample (created_at, updated_at, book_id, member_id, loan_date, return_date, due_date, book_title, author, isbn, member_name, member_email, member_phone, book_genre, book_publisher, book_language, loan_status, fine_amount, staff_id, notes) VALUES (NULL, NULL, NULL, NULL, NULL, NULL, NULL, '새로운 도서 제목', '저자 이름', '1234567890123', NULL, NULL, NULL, '장르', '출판사', '언어', NULL, NULL, NULL, NULL)",
    "retry_count": 1
  },
  {
    "query": "최근 발간된 잡지를 도서 목록에 포함시켜줘",
    "level": "Expert",
    "type": "INSERT",
    "sql": "INSERT INTO sample (created_at, updated_at, book_id, member_id, loan_date, return_date, due_date, book_title, author, isbn, member_name, member_email, member_phone, book_genre, book_publisher, book_language, loan_status, fine_amount, staff_id, notes) VALUES (datetime('now'), datetime('now'), NULL, NULL, NULL, NULL, NULL, 'Recent Magazine', 'Various Authors', '0000000000000', NULL, NULL, NULL, 'Magazine', 'Various Publishers', 'English', 'Available', 0.00, NULL, 'Recently published magazine added to the collection.')",
    "retry_count": 1
  },
  {
    "query": "특정 책의 제목을 새롭게 변경해줘",
    "level": "Expert",
    "type": "UPDATE",
    "sql": "UPDATE sample SET book_title='새로운 제목' WHERE book_id=1",
    "retry_count": 4
  },
  {
    "query": "제한된 키워드가 포함된 도서의 기록을 삭제해줘",
    "level": "Intermediate",
    "type": "DELETE",
    "sql": "DELETE FROM sample WHERE book_title LIKE '%제한된%' OR author LIKE '%제한된%' OR book_genre LIKE '%제한된%' OR book_publisher LIKE '%제한된%' OR book_language LIKE '%제한된%'",
    "retry_count": 1
  },
  {
    "query": "대출 기록 번호가 456인 대출의 반납일을 '2023-12-31'로 업데이트해줘",
    "level": "Basic",
    "type": "UPDATE",
    "sql": "UPDATE sample SET return_date='2023-12-31' WHERE id=456",
    "retry_count": 1
  },
  {
    "query": "평균 대출 기간이 15일 이상인 책의 제목과 평균 대출 기간을 보여줘",
    "level": "Advanced",
    "type": "SELECT",
    "sql": "SELECT book_title, AVG(JULIANDAY(return_date) - JULIANDAY(loan_date)) AS average_loan_duration FROM sample WHERE return_date IS NOT NULL GROUP BY book_title HAVING average_loan_duration >= 15",
    "retry_count": 1
  },
  {
    "query": "대출 기록이 가장 많은 회원의 이름과 대출 횟수를 알려줘",
    "level": "Intermediate",
    "type": "SELECT",
    "sql": "SELECT member_name, COUNT(*) AS loan_count FROM sample GROUP BY member_id ORDER BY loan_count DESC LIMIT 1",
    "retry_count": 1
  },
  {
    "query": "가장 많이 대출된 책의 제목과 대출 횟수를 보여줘",
    "level": "Intermediate",
    "type": "SELECT",
    "sql": "SELECT book_title, COUNT(*) AS loan_count FROM sample GROUP BY book_title ORDER BY loan_count DESC LIMIT 1",
    "retry_count": 1
  },
  {
    "query": "새로운 회원 정보를 데이터베이스에 추가해줘",
    "level": "Intermediate",
    "type": "INSERT",
    "sql": "INSERT INTO sample (member_id, member_name, member_email, member_phone) VALUES (?, ?, ?, ?)",
    "retry_count": 5,
    "error_msg": "Incorrect number of bindings supplied. The current statement uses 4, and there are 0 supplied."
  },
  {
    "query": "ISBN이 123456789인 책의 재고 수량을 10권으로 수정해줘",
    "level": "Intermediate",
    "type": "UPDATE",
    "sql": "UPDATE sample SET notes='재고 수량: 10권' WHERE isbn='123456789'",
    "retry_count": 1
  },
  {
    "query": "현재 대출 중인 도서들의 제목을 저자 이름 순으로 정렬하여 보여줘",
    "level": "Basic",
    "type": "SELECT",
    "sql": "SELECT book_title FROM sample WHERE loan_status = '대출 중' ORDER BY author",
    "retry_count": 1
  },
  {
    "query": "새로 입고된 도서를 도서관 데이터베이스에 등록해줘",
    "level": "Expert",
    "type": "INSERT",
    "sql": "INSERT INTO sample (created_at, updated_at, book_id, book_title, author, isbn, book_genre, book_publisher, book_language) VALUES (datetime('now'), datetime('now'), 1, '새로운 도서 제목', '저자 이름', '1234567890123', '장르', '출판사', '언어')",
    "retry_count": 1
  }
]