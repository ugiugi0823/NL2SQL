# NL2SQL 파이프라인 개선 작업 리포트 (2024-06-08)

## 1. 주요 작업 내역
- 난이도별 SQL/NL 프롬프트를 구체적으로 설계 및 적용
- SQL 생성 시 난이도별 요구사항을 명확히 프롬프트에 반영
- SQL 생성 결과에 대해 난이도 및 타입(SELECT/INSERT/UPDATE/DELETE) 자동 검증 로직 추가
- 검증에 실패한 쿼리는 결과에서 제외하고 경고 메시지 출력
- 재시도 횟수, 실패 사유 등 상세 통계 및 로그 출력

## 2. 오늘의 문제점
- **SQL 타입 불일치**: 예를 들어, INSERT 유형의 NL에 대해 SELECT 쿼리가 생성되는 경우가 많았음
- **난이도 불일치**: Basic 난이도에서 집계, 서브쿼리, JOIN 등 상위 난이도 요소가 포함된 SQL이 생성됨
- **프롬프트와 실제 결과 불일치**: LLM이 프롬프트의 요구사항을 완전히 따르지 않는 경우가 빈번함
- **재시도 횟수 증가**: 검증이 엄격해지면서, 특히 INSERT/UPDATE 등에서 LLM이 적합한 쿼리를 내놓을 때까지 재시도 횟수가 크게 늘어남

## 3. 해결 방법
- **난이도별 프롬프트 강화**: 각 난이도별로 허용/금지되는 SQL 요소를 명확히 프롬프트에 명시
- **자동 검증 로직 도입**: SQL이 NL의 의도와 타입, 난이도 규칙에 맞는지 코드로 검증하여, 부적합한 쿼리는 결과에서 제외
- **실시간 경고 및 통계 출력**: 검증 실패 시 경고 메시지와 함께 NL/SQL 쌍, 실패 사유를 출력하여 문제를 즉시 파악할 수 있도록 개선
- **결과 파일에 재시도 통계 포함**: 각 타입/난이도별 재시도 횟수, 전체 평균 등 상세 통계를 결과 파일에 저장

## 4. 개선 효과 및 한계
- **SQL 생성 품질 향상**: 난이도와 타입에 맞는 쿼리만 결과에 포함되어 품질이 크게 향상됨
- **문제 추적 용이**: 어떤 NL/SQL 쌍이 왜 걸러졌는지 즉시 확인 가능
- **남은 과제**: INSERT/UPDATE 등에서 LLM이 여전히 SELECT 쿼리를 내놓는 경향이 있으므로, 프롬프트 예시 추가 등 추가 개선 필요

---
2024-06-08 작성 