{
  "results": [
    {
      "nl": "모든 사용자의 예약 목록을 보여줘.",
      "sql": "SELECT * FROM 항공권_예약;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "2023년 1월 1일 이후에 출발하는 모든 항공편 예약을 조회해줘.",
      "sql": "SELECT * FROM 항공권_예약 WHERE departure_date > '2023-01-01';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "departure_date"
      ],
      "matched_fields": []
    },
    {
      "nl": "총 가격이 100,000원 이상인 예약을 찾아줘.",
      "sql": "SELECT * FROM 항공권_예약 WHERE total_price >= 100000;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "total_price"
      ],
      "matched_fields": []
    },
    {
      "nl": "비행기 번호가 'AB123'인 예약의 승객 이름을 알려줘.",
      "sql": "SELECT passenger_name FROM 항공권_예약 WHERE flight_number = 'AB123';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "passenger_name"
      ],
      "matched_fields": [
        "flight_number"
      ]
    },
    {
      "nl": "결제 상태가 '완료'인 예약의 수를 세어줘.",
      "sql": "SELECT COUNT(*) FROM 항공권_예약 WHERE payment_status = '완료';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "payment_status"
      ],
      "matched_fields": []
    },
    {
      "nl": "출발 도시가 '서울'이고 도착 도시가 '부산'인 예약을 검색해줘.",
      "sql": "SELECT * FROM 항공권_예약 WHERE departure_city = '서울' AND arrival_city = '부산';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "departure_city",
        "arrival_city"
      ],
      "matched_fields": []
    },
    {
      "nl": "수하물 허용량이 20kg 이하인 예약의 리스트를 보여줘.",
      "sql": "SELECT * FROM 항공권_예약 WHERE baggage_allowance <= 20;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "baggage_allowance"
      ],
      "matched_fields": []
    },
    {
      "nl": "식사 선호도가 '채식'인 예약의 승객 정보를 조회해줘.",
      "sql": "SELECT passenger_name, passenger_phone, passenger_email FROM 항공권_예약 WHERE meal_preference = '채식';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "passenger_phone",
        "meal_preference",
        "passenger_email",
        "passenger_name"
      ],
      "matched_fields": []
    },
    {
      "nl": "예약 상태가 '활성'이고 결제 상태가 '대기'인 예약을 찾아줘.",
      "sql": "SELECT * FROM 항공권_예약 WHERE status = '활성' AND payment_status = '대기';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "status",
        "payment_status"
      ],
      "matched_fields": []
    },
    {
      "nl": "2023년 12월 31일 이전에 예약된 모든 항공편의 총 가격 평균을 알려줘.",
      "sql": "SELECT AVG(total_price) FROM 항공권_예약 WHERE created_at < '2023-12-31';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "created_at",
        "total_price"
      ],
      "matched_fields": []
    },
    {
      "nl": "사용자 ID가 5인 예약의 총 가격이 200,000원보다 큰 항공권 정보를 추가해주세요.",
      "sql": "INSERT INTO 항공권_예약 (user_id, total_price) VALUES (5, 200001.00);",
      "dml": "INSERT",
      "db_success": false,
      "db_error": "1364 (HY000): Field 'flight_number' doesn't have a default value",
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "출발 도시가 '서울'이고 도착 도시가 '뉴욕'인 항공편의 예약을 추가해주세요.",
      "sql": "INSERT INTO 항공권_예약 (departure_city, arrival_city) VALUES ('서울', '뉴욕');",
      "dml": "INSERT",
      "db_success": false,
      "db_error": "1364 (HY000): Field 'flight_number' doesn't have a default value",
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "식사 선호도가 '채식'인 승객의 예약 정보를 추가해주세요.",
      "sql": "INSERT INTO 항공권_예약 (meal_preference) VALUES ('채식');",
      "dml": "INSERT",
      "db_success": false,
      "db_error": "1364 (HY000): Field 'flight_number' doesn't have a default value",
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "귀국 날짜가 2023년 12월 31일인 예약을 추가해주세요.",
      "sql": "INSERT INTO 항공권_예약 (return_date) VALUES ('2023-12-31');",
      "dml": "INSERT",
      "db_success": false,
      "db_error": "1364 (HY000): Field 'flight_number' doesn't have a default value",
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "수하물 허용량이 30kg 이상인 항공권 예약을 추가해주세요.",
      "sql": "INSERT INTO 항공권_예약 (baggage_allowance) VALUES (30);",
      "dml": "INSERT",
      "db_success": false,
      "db_error": "1364 (HY000): Field 'flight_number' doesn't have a default value",
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "결제 상태가 '완료'인 예약을 추가해주세요.",
      "sql": "INSERT INTO 항공권_예약 (payment_status) VALUES ('완료');",
      "dml": "INSERT",
      "db_success": false,
      "db_error": "1364 (HY000): Field 'flight_number' doesn't have a default value",
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "티켓 유형이 '특가'이고, 예약 상태가 '활성'인 항공권 정보를 추가해주세요.",
      "sql": "INSERT INTO 항공권_예약 (ticket_type, status) VALUES ('특가', '활성');",
      "dml": "INSERT",
      "db_success": false,
      "db_error": "1364 (HY000): Field 'flight_number' doesn't have a default value",
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "예약 시각이 현재 시각 이전인 항공권 예약을 추가해주세요.",
      "sql": "INSERT INTO 항공권_예약 (created_at) VALUES (NOW() - INTERVAL 1 DAY);",
      "dml": "INSERT",
      "db_success": false,
      "db_error": "1364 (HY000): Field 'flight_number' doesn't have a default value",
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "총 가격이 150,000원 이하이고, 식사 선호도가 '비채식'인 예약을 추가해주세요.",
      "sql": "INSERT INTO 항공권_예약 (total_price, meal_preference) VALUES (150000.00, '비채식');",
      "dml": "INSERT",
      "db_success": false,
      "db_error": "1364 (HY000): Field 'flight_number' doesn't have a default value",
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "회원 프로그램 코드가 'VIP'인 사용자의 예약 정보를 추가해주세요.",
      "sql": "INSERT INTO 항공권_예약 (loyalty_program) VALUES ('VIP');",
      "dml": "INSERT",
      "db_success": false,
      "db_error": "1364 (HY000): Field 'flight_number' doesn't have a default value",
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "모든 예약의 결제 상태를 '완료'로 업데이트 하세요.",
      "sql": "UPDATE 항공권_예약 SET payment_status = '완료';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "payment_status"
      ],
      "matched_fields": []
    },
    {
      "nl": "총 가격이 500000원 이상인 예약의 상태를 '완료'로 변경하세요.",
      "sql": "UPDATE 항공권_예약 SET status = '완료' WHERE total_price >= 500000;",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "status",
        "total_price"
      ],
      "matched_fields": []
    },
    {
      "nl": "출발 도시가 '서울'인 모든 예약의 식사 선호도를 '채식'으로 업데이트 하세요.",
      "sql": "UPDATE 항공권_예약 SET meal_preference = '채식' WHERE departure_city = '서울';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "departure_city",
        "meal_preference"
      ],
      "matched_fields": []
    },
    {
      "nl": "예약 상태가 '대기'인 모든 예약의 귀국 날짜를 오늘 날짜로 변경하세요.",
      "sql": "UPDATE 항공권_예약 SET return_date = CURDATE() WHERE status = '대기';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "return_date",
        "status"
      ],
      "matched_fields": []
    },
    {
      "nl": "사용자 ID가 3인 예약의 전화번호를 '01012345678'로 업데이트 하세요.",
      "sql": "UPDATE 항공권_예약 SET passenger_phone = '01012345678' WHERE user_id = 3;",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "passenger_phone"
      ],
      "matched_fields": [
        "user_id"
      ]
    },
    {
      "nl": "수하물 허용량이 20kg 이하인 예약의 총 가격을 100000원으로 변경하세요.",
      "sql": "UPDATE 항공권_예약 SET total_price = 100000 WHERE baggage_allowance <= 20;",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "total_price",
        "baggage_allowance"
      ],
      "matched_fields": []
    },
    {
      "nl": "식사 선호도가 '비채식'인 예약의 상태를 '취소'로 업데이트 하세요.",
      "sql": "UPDATE 항공권_예약 SET status = '취소' WHERE meal_preference = '비채식';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "status",
        "meal_preference"
      ],
      "matched_fields": []
    },
    {
      "nl": "특가 티켓 유형인 예약의 결제 상태를 '대기'로 바꾸세요.",
      "sql": "UPDATE 항공권_예약 SET payment_status = '대기' WHERE ticket_type = '특가';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "ticket_type",
        "payment_status"
      ],
      "matched_fields": []
    },
    {
      "nl": "귀국 날짜가 현재 날짜보다 이전인 예약의 상태를 '취소'로 변경하세요.",
      "sql": "UPDATE 항공권_예약 SET status = '취소' WHERE return_date < CURDATE();",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "return_date",
        "status"
      ],
      "matched_fields": []
    },
    {
      "nl": "항공편 번호가 'AA123'인 예약의 메모를 '특별 요청 없음'으로 업데이트 하세요.",
      "sql": "UPDATE 항공권_예약 SET notes = '특별 요청 없음' WHERE flight_number = 'AA123';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "notes"
      ],
      "matched_fields": [
        "flight_number"
      ]
    },
    {
      "nl": "사용자 ID가 5인 모든 항공권 예약을 삭제해 주세요.",
      "sql": "DELETE FROM 항공권_예약 WHERE user_id = 5;",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": [
        "user_id"
      ]
    },
    {
      "nl": "총 가격이 100000원보다 큰 모든 예약을 삭제해 주세요.",
      "sql": "DELETE FROM 항공권_예약 WHERE total_price > 100000;",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "total_price"
      ],
      "matched_fields": []
    },
    {
      "nl": "결제 상태가 '취소'인 항공권 예약을 모두 삭제해 주세요.",
      "sql": "DELETE FROM 항공권_예약 WHERE payment_status = '취소';",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "payment_status"
      ],
      "matched_fields": []
    },
    {
      "nl": "출발 도시가 '서울'이고 도착 도시가 '뉴욕'인 예약을 삭제해 주세요.",
      "sql": "DELETE FROM 항공권_예약 WHERE departure_city = '서울' AND arrival_city = '뉴욕';",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "departure_city",
        "arrival_city"
      ],
      "matched_fields": []
    },
    {
      "nl": "귀국 날짜가 오늘 날짜보다 이전인 모든 예약을 삭제해 주세요.",
      "sql": "DELETE FROM 항공권_예약 WHERE return_date < CURDATE();",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "return_date"
      ],
      "matched_fields": []
    },
    {
      "nl": "식사 선호도가 '비채식'인 예약을 삭제해 주세요.",
      "sql": "DELETE FROM 항공권_예약 WHERE meal_preference = '비채식';",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "meal_preference"
      ],
      "matched_fields": []
    },
    {
      "nl": "수하물 허용량이 20kg 이하인 모든 예약을 삭제해 주세요.",
      "sql": "DELETE FROM 항공권_예약 WHERE baggage_allowance <= 20;",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "baggage_allowance"
      ],
      "matched_fields": []
    },
    {
      "nl": "티켓 유형이 '환불불가'인 예약을 삭제해 주세요.",
      "sql": "DELETE FROM 항공권_예약 WHERE ticket_type = '환불불가';",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "ticket_type"
      ],
      "matched_fields": []
    },
    {
      "nl": "결제 상태가 '대기'이고 예약 상태가 '활성'인 모든 예약을 삭제해 주세요.",
      "sql": "DELETE FROM 항공권_예약 WHERE payment_status = '대기' AND status = '활성';",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "status",
        "payment_status"
      ],
      "matched_fields": []
    },
    {
      "nl": "회원 프로그램 코드가 'VIP'인 모든 예약을 삭제해 주세요.",
      "sql": "DELETE FROM 항공권_예약 WHERE loyalty_program = 'VIP';",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "loyalty_program"
      ],
      "matched_fields": []
    }
  ]
}