{
  "results": [
    {
      "nl": "주문 상태가 '배송중'인 주문의 모든 정보를 조회해줘.",
      "sql": "SELECT * FROM 온라인_쇼핑 WHERE order_status = '배송중';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "order_status"
      ],
      "matched_fields": []
    },
    {
      "nl": "가격이 10000원 이상인 상품의 주문 ID와 사용자 ID를 가져와 줘.",
      "sql": "SELECT order_id, user_id FROM 온라인_쇼핑 WHERE price >= 10000;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": [
        "user_id",
        "price",
        "order_id"
      ]
    },
    {
      "nl": "수량이 5개 이하인 주문들의 총 가격을 계산해줘.",
      "sql": "SELECT SUM(price) AS total_price FROM 온라인_쇼핑 WHERE quantity <= 5;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": [
        "quantity",
        "price"
      ]
    },
    {
      "nl": "배송 주소가 '서울'인 주문의 주문 ID와 상태를 보여줘.",
      "sql": "SELECT order_id, order_status FROM 온라인_쇼핑 WHERE delivery_address LIKE '%서울%';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "delivery_address",
        "order_status"
      ],
      "matched_fields": [
        "order_id"
      ]
    },
    {
      "nl": "주문 생성 시각이 2023년 1월 1일 이후인 주문의 수를 세어줘.",
      "sql": "SELECT COUNT(*) AS order_count FROM 온라인_쇼핑 WHERE created_at >= '2023-01-01';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "created_at"
      ],
      "matched_fields": []
    },
    {
      "nl": "결제 상태가 '완료'인 주문 중에서 가격이 50000원 이하인 주문을 찾아줘.",
      "sql": "SELECT * FROM 온라인_쇼핑 WHERE payment_status = '완료' AND price <= 50000;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "payment_status"
      ],
      "matched_fields": [
        "price"
      ]
    },
    {
      "nl": "주문 상태가 '취소'인 주문의 평균 수량을 계산해줘.",
      "sql": "SELECT AVG(quantity) AS average_quantity FROM 온라인_쇼핑 WHERE order_status = '취소';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "order_status"
      ],
      "matched_fields": [
        "quantity"
      ]
    },
    {
      "nl": "온도가 30도 이상인 날씨의 주문 수를 조회해줘.",
      "sql": "SELECT COUNT(*) AS order_count FROM 온라인_쇼핑 WHERE temperature >= 30.0;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "temperature"
      ],
      "matched_fields": []
    },
    {
      "nl": "사용자 ID가 2인 주문의 가격 합계를 구해줘.",
      "sql": "SELECT SUM(price) AS total_price FROM 온라인_쇼핑 WHERE user_id = 2;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": [
        "user_id",
        "price"
      ]
    },
    {
      "nl": "배송완료 상태의 주문 중, 주문 생성 시각이 가장 최근인 주문의 정보를 가져와 줘.",
      "sql": "SELECT * FROM 온라인_쇼핑 WHERE order_status = '배송완료' ORDER BY created_at DESC LIMIT 1;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "created_at",
        "order_status"
      ],
      "matched_fields": []
    },
    {
      "nl": "주문 상태가 '배송중'인 모든 주문을 추가해주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, order_status, delivery_address, created_at, updated_at, is_active, payment_status) SELECT user_id, product_id, quantity, price, '배송중', delivery_address, created_at, updated_at, is_active, payment_status FROM `온라인_쇼핑` WHERE order_status = '배송중';",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "가격이 10000원 이상인 상품을 구매한 주문을 추가해주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, order_status, delivery_address, created_at, updated_at, is_active, payment_status) SELECT user_id, product_id, quantity, price, order_status, delivery_address, created_at, updated_at, is_active, payment_status FROM `온라인_쇼핑` WHERE price >= 10000;",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "수량이 5개 이하인 주문을 추가해주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, order_status, delivery_address, created_at, updated_at, is_active, payment_status) SELECT user_id, product_id, quantity, price, order_status, delivery_address, created_at, updated_at, is_active, payment_status FROM `온라인_쇼핑` WHERE quantity <= 5;",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "결제 상태가 '완료'이고 주문 상태가 '배송완료'인 모든 주문을 추가해주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, order_status, delivery_address, created_at, updated_at, is_active, payment_status) SELECT user_id, product_id, quantity, price, '배송완료', delivery_address, created_at, updated_at, is_active, '완료' FROM `온라인_쇼핑` WHERE payment_status = '완료' AND order_status = '배송완료';",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "구매한 도서의 장르가 '소설'인 주문을 추가해주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, order_status, delivery_address, created_at, updated_at, is_active, payment_status) SELECT user_id, product_id, quantity, price, order_status, delivery_address, created_at, updated_at, is_active, payment_status FROM `온라인_쇼핑` WHERE genre = '소설';",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "온도가 20도 이상이고 습도가 50% 이하인 주문을 추가해주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, order_status, delivery_address, created_at, updated_at, is_active, payment_status) SELECT user_id, product_id, quantity, price, order_status, delivery_address, created_at, updated_at, is_active, payment_status FROM `온라인_쇼핑` WHERE temperature >= 20 AND humidity <= 50;",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "사용자 ID가 2이고 주문 상태가 '취소'인 주문을 추가해주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, order_status, delivery_address, created_at, updated_at, is_active, payment_status) SELECT user_id, product_id, quantity, price, '취소', delivery_address, created_at, updated_at, is_active, payment_status FROM `온라인_쇼핑` WHERE user_id = 2 AND order_status = '취소';",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "배송 주소가 '서울'인 주문을 추가해주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, order_status, delivery_address, created_at, updated_at, is_active, payment_status) SELECT user_id, product_id, quantity, price, order_status, '서울', created_at, updated_at, is_active, payment_status FROM `온라인_쇼핑` WHERE delivery_address = '서울';",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "주문 생성 시각이 현재 시각보다 1시간 이상 지난 주문을 추가해주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, order_status, delivery_address, created_at, updated_at, is_active, payment_status) SELECT user_id, product_id, quantity, price, order_status, delivery_address, created_at, updated_at, is_active, payment_status FROM `온라인_쇼핑` WHERE created_at <= NOW() - INTERVAL 1 HOUR;",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "아티스트 ID가 3인 상품을 구매한 주문을 추가해주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, order_status, delivery_address, created_at, updated_at, is_active, payment_status) SELECT user_id, product_id, quantity, price, order_status, delivery_address, created_at, updated_at, is_active, payment_status FROM `온라인_쇼핑` WHERE artist_id = 3;",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "주문 상태가 '배송중'인 주문의 결제 상태를 '완료'로 업데이트 해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `payment_status` = '완료' WHERE `order_status` = '배송중';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "수량이 5 이상인 주문의 가격을 10% 인상해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `price` = `price` * 1.10 WHERE `quantity` >= 5;",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "배송 주소가 NULL인 모든 주문의 주문 상태를 '취소'로 변경해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `order_status` = '취소' WHERE `delivery_address` IS NULL;",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "온도가 30도 이상인 주문의 상태를 '배송중'으로 업데이트 해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `order_status` = '배송중' WHERE `temperature` >= 30.0;",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "결제 상태가 '대기'인 모든 주문의 결제 상태를 '취소'로 변경해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `payment_status` = '취소' WHERE `payment_status` = '대기';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "주문 생성 시각이 2023년 1월 1일 이후인 주문의 주문 상태를 '배송완료'로 수정해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `order_status` = '배송완료' WHERE `created_at` > '2023-01-01 00:00:00';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "습도가 70% 이상인 주문의 가격을 5% 할인해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `price` = `price` * 0.95 WHERE `humidity` >= 70;",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "주문 ID가 1000보다 큰 주문의 수량을 2로 변경해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `quantity` = 2 WHERE `order_id` > 1000;",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "주문 상태가 '주문완료'이고 결제 상태가 '완료'인 모든 주문의 배송 주소를 업데이트 해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `delivery_address` = '새로운 주소' WHERE `order_status` = '주문완료' AND `payment_status` = '완료';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "진료 예약일이 오늘 날짜인 모든 주문의 상태를 '배송중'으로 변경해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `order_status` = '배송중' WHERE DATE(`appointment_date`) = CURDATE();",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "주문 상태가 '취소'인 모든 주문을 삭제해 주세요.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `order_status` = '취소';",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "배송 완료된 주문 중에서 가격이 10000원 이하인 주문을 삭제해 주세요.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `order_status` = '배송완료' AND `price` <= 10000;",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "수량이 5개 이상인 모든 주문을 삭제해 주세요.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `quantity` >= 5;",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "결제 상태가 '실패'인 주문을 삭제해 주세요.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `payment_status` = '실패';",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "주문 생성 시각이 2023년 1월 1일 이전인 모든 주문을 삭제해 주세요.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `created_at` < '2023-01-01 00:00:00';",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "배송 주소가 NULL인 주문을 삭제해 주세요.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `delivery_address` IS NULL;",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "온도가 30도 이상인 주문을 삭제해 주세요.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `temperature` >= 30.0;",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "습도가 80% 이상인 주문 중에서 주문 상태가 '배송중'인 모든 주문을 삭제해 주세요.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `humidity` >= 80 AND `order_status` = '배송중';",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "주문 ID가 1000보다 큰 모든 주문을 삭제해 주세요.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `order_id` > 1000;",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "아티스트 ID가 5인 주문 중에서 주문 상태가 '주문완료'인 모든 주문을 삭제해 주세요.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `artist_id` = 5 AND `order_status` = '주문완료';",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    }
  ]
}