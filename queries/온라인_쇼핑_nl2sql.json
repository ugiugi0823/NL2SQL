{
  "results": [
    {
      "nl": "모든 주문에서 상태가 '배송중'인 주문의 수량과 가격을 가져와라.",
      "sql": "SELECT quantity, price FROM 온라인_쇼핑 WHERE order_status = '배송중';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "order_status"
      ],
      "matched_fields": [
        "quantity",
        "price"
      ]
    },
    {
      "nl": "2023년 1월 1일 이후에 생성된 주문의 총 가격을 계산하라.",
      "sql": "SELECT SUM(price) AS total_price FROM 온라인_쇼핑 WHERE created_at >= '2023-01-01';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "created_at"
      ],
      "matched_fields": [
        "price"
      ]
    },
    {
      "nl": "주문 상태가 '주문완료'인 주문의 수량이 5개 이상인 모든 주문을 조회하라.",
      "sql": "SELECT * FROM 온라인_쇼핑 WHERE order_status = '주문완료' AND quantity >= 5;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "order_status"
      ],
      "matched_fields": [
        "quantity"
      ]
    },
    {
      "nl": "각 사용자별로 주문한 상품의 평균 가격을 구하라.",
      "sql": "SELECT user_id, AVG(price) AS average_price FROM 온라인_쇼핑 GROUP BY user_id;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": [
        "user_id",
        "price"
      ]
    },
    {
      "nl": "가격이 10000원 이상인 주문의 주문 ID와 사용자 ID를 조회하라.",
      "sql": "SELECT order_id, user_id FROM 온라인_쇼핑 WHERE price >= 10000;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": [
        "user_id",
        "order_id",
        "price"
      ]
    },
    {
      "nl": "주문 상태가 '배송완료'인 주문의 수량이 1개 이하인 주문을 찾으시오.",
      "sql": "SELECT * FROM 온라인_쇼핑 WHERE order_status = '배송완료' AND quantity <= 1;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "order_status"
      ],
      "matched_fields": [
        "quantity"
      ]
    },
    {
      "nl": "2022년 한 해 동안의 총 주문 수를 계산하라.",
      "sql": "SELECT COUNT(*) AS total_orders FROM 온라인_쇼핑 WHERE created_at BETWEEN '2022-01-01' AND '2022-12-31';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "created_at"
      ],
      "matched_fields": []
    },
    {
      "nl": "배송 상태가 '취소'인 주문의 수량과 가격을 합산하라.",
      "sql": "SELECT SUM(quantity) AS total_quantity, SUM(price) AS total_price FROM 온라인_쇼핑 WHERE order_status = '취소';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "order_status"
      ],
      "matched_fields": [
        "quantity",
        "price"
      ]
    },
    {
      "nl": "온도가 25도 이상인 날의 주문 수를 카운트하라.",
      "sql": "SELECT COUNT(*) AS order_count FROM 온라인_쇼핑 WHERE temperature >= 25;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "temperature"
      ],
      "matched_fields": []
    },
    {
      "nl": "장르가 '소설'인 상품의 주문 상태가 '배송중'인 모든 주문을 조회하라.",
      "sql": "SELECT * FROM 온라인_쇼핑 WHERE genre = '소설' AND order_status = '배송중';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "order_status",
        "genre"
      ],
      "matched_fields": []
    },
    {
      "nl": "주문 상태가 '배송중'인 모든 주문을 추가해 주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, order_status) VALUES (1, 1, 1, 0.00, '배송중')",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "가격이 50000원 이상인 상품을 주문해 주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price) VALUES (1, 1, 1, 50000.00)",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "수량이 10개 이하인 주문을 생성해 주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price) VALUES (1, 1, 10, 0.00)",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "배송 주소가 '서울시 강남구'인 주문을 추가해 주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, delivery_address) VALUES (1, 1, 1, 0.00, '서울시 강남구')",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "결제 상태가 '완료'인 주문을 추가해 주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, payment_status) VALUES (1, 1, 1, 0.00, '완료')",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "온도가 30도 이하이고 습도가 60% 이상인 주문을 추가해 주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, temperature, humidity) VALUES (1, 1, 1, 0.00, 30.0, 60)",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "장르가 '소설'인 상품을 주문해 주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, genre) VALUES (1, 1, 1, 0.00, '소설')",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "아티스트 ID가 5인 상품을 주문해 주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, artist_id) VALUES (1, 1, 1, 0.00, 5)",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "주문 생성 시각이 현재 시각보다 이전인 주문을 추가해 주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, created_at) VALUES (1, 1, 1, 0.00, '2023-01-01 00:00:00')",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "좌석 번호가 'A1'인 예약을 추가해 주세요.",
      "sql": "INSERT INTO `온라인_쇼핑` (user_id, product_id, quantity, price, seat_number) VALUES (1, 1, 1, 0.00, 'A1')",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "주문 ID가 5인 주문의 주문 상태를 '배송중'으로 업데이트 해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `order_status` = '배송중' WHERE `order_id` = 5;",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "사용자 ID가 3이고 상품 ID가 10인 주문의 수량을 2로 변경해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `quantity` = 2 WHERE `user_id` = 3 AND `product_id` = 10;",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "배송 상태가 '취소'인 모든 주문의 결제 상태를 '취소'로 업데이트 해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `payment_status` = '취소' WHERE `order_status` = '취소';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "주문 생성 시각이 2023년 1월 1일 이후인 주문의 가격을 10000으로 설정해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `price` = 10000 WHERE `created_at` > '2023-01-01';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "온도가 30도 이상인 주문의 배송 주소를 '서울'로 변경해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `delivery_address` = '서울' WHERE `temperature` >= 30.0;",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "습도가 80% 이하인 모든 주문의 주문 상태를 '배송완료'로 업데이트 해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `order_status` = '배송완료' WHERE `humidity` <= 80;",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "주문 상태가 '주문완료'이면서 결제 상태가 '대기'인 주문의 수량을 5로 수정해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `quantity` = 5 WHERE `order_status` = '주문완료' AND `payment_status` = '대기';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "주문 ID가 10보다 큰 모든 주문의 활성 상태를 false로 설정해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `is_active` = FALSE WHERE `order_id` > 10;",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "주문 생성 시각이 현재 시각보다 1주일 이전인 주문의 가격을 5000으로 변경해주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `price` = 5000 WHERE `created_at` < NOW() - INTERVAL 1 WEEK;",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "배송 상태가 '배송중'인 주문의 수량을 1 감소시켜 주세요.",
      "sql": "UPDATE `온라인_쇼핑` SET `quantity` = `quantity` - 1 WHERE `order_status` = '배송중';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "주문 상태가 '배송중'인 모든 주문을 삭제해 주세요.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `order_status` = '배송중';",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "가격이 10000원 이상인 주문을 모두 삭제하십시오.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `price` >= 10000;",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "사용자 ID가 3인 주문 중에서 수량이 5 이상인 주문을 삭제해주세요.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `user_id` = 3 AND `quantity` >= 5;",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "배송 주소가 '서울'로 시작하는 모든 주문을 삭제해 주세요.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `delivery_address` LIKE '서울%';",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "결제 상태가 '취소'인 주문을 삭제하십시오.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `payment_status` = '취소';",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "주문 생성 시각이 2023년 1월 1일 이전인 주문을 모두 삭제해 주세요.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `created_at` < '2023-01-01';",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "온도가 30도 이상인 주문을 삭제해 주세요.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `temperature` >= 30.0;",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "습도가 80% 이상인 모든 주문을 삭제하십시오.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `humidity` >= 80;",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "주문 상태가 '주문완료'이고 수량이 2 이하인 주문을 삭제해주세요.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `order_status` = '주문완료' AND `quantity` <= 2;",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "진료 예약일이 2023년 12월 31일 이전인 모든 주문을 삭제해 주세요.",
      "sql": "DELETE FROM `온라인_쇼핑` WHERE `appointment_date` < '2023-12-31 00:00:00';",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    }
  ]
}