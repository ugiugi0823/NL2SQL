{
  "results": [
    {
      "nl": "대출 상태가 '활성'인 도서의 제목과 대출 날짜를 조회해 주세요.",
      "sql": "SELECT book_title, loan_date FROM 도서관_대출 WHERE status = '활성';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "book_title",
        "loan_date",
        "status"
      ],
      "matched_fields": []
    },
    {
      "nl": "회원 이름이 '김철수'인 대출 기록의 반납 예정 날짜를 알려주세요.",
      "sql": "SELECT return_date FROM 도서관_대출 WHERE user_name = '김철수';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "user_name",
        "return_date"
      ],
      "matched_fields": []
    },
    {
      "nl": "대출 기간이 7일 이상인 도서의 제목과 대출 상태를 출력해 주세요.",
      "sql": "SELECT book_title, status FROM 도서관_대출 WHERE duration >= 7;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "duration",
        "book_title",
        "status"
      ],
      "matched_fields": []
    },
    {
      "nl": "연체료가 5000원 이상인 대출 기록의 회원 이름과 도서 제목을 조회해 주세요.",
      "sql": "SELECT user_name, book_title FROM 도서관_대출 WHERE penalty_fee >= 5000;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "book_title",
        "user_name",
        "penalty_fee"
      ],
      "matched_fields": []
    },
    {
      "nl": "대출 시작 날짜가 2023년 1월 1일 이후인 대출 기록의 수를 세어 주세요.",
      "sql": "SELECT COUNT(*) FROM 도서관_대출 WHERE loan_date > '2023-01-01';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "loan_date"
      ],
      "matched_fields": []
    },
    {
      "nl": "실제 반납 날짜가 '1970-01-01'이 아닌 대출 기록 중, 대출 상태가 '완료'인 도서 제목을 검색해 주세요.",
      "sql": "SELECT book_title FROM 도서관_대출 WHERE actual_return_date != '1970-01-01' AND status = '완료';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "book_title",
        "actual_return_date",
        "status"
      ],
      "matched_fields": []
    },
    {
      "nl": "대출 기간이 평균 이상인 도서의 제목과 대출 날짜를 조회해 주세요.",
      "sql": "SELECT book_title, loan_date FROM 도서관_대출 WHERE duration >= (SELECT AVG(duration) FROM 도서관_대출);",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "duration",
        "book_title",
        "loan_date"
      ],
      "matched_fields": []
    },
    {
      "nl": "회원 연락처가 NULL이 아닌 대출 기록의 수를 세어 주세요.",
      "sql": "SELECT COUNT(*) FROM 도서관_대출 WHERE phone IS NOT NULL;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "phone"
      ],
      "matched_fields": []
    },
    {
      "nl": "반납 예정 날짜가 오늘보다 이전인 대출 상태가 '대기'인 기록을 조회해 주세요.",
      "sql": "SELECT * FROM 도서관_대출 WHERE return_date < CURDATE() AND status = '대기';",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "status",
        "return_date"
      ],
      "matched_fields": []
    },
    {
      "nl": "회원 이름이 '이영희'이면서 대출 기간이 14일 이하인 대출 기록의 도서 제목과 대출 날짜를 알려주세요.",
      "sql": "SELECT book_title, loan_date FROM 도서관_대출 WHERE user_name = '이영희' AND duration <= 14;",
      "dml": "SELECT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "duration",
        "book_title",
        "user_name",
        "loan_date"
      ],
      "matched_fields": []
    },
    {
      "nl": "대출 상태가 '활성'인 도서를 대출한 회원의 이름과 도서 제목을 입력하세요.",
      "sql": "INSERT INTO 도서관_대출 (user_id, book_id, loan_date, return_date, user_name, book_title, status) SELECT user_id, book_id, CURRENT_DATE, DATE_ADD(CURRENT_DATE, INTERVAL duration DAY), user_name, book_title, '활성' FROM 도서관_대출 WHERE status = '활성';",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "book_title",
        "status",
        "book_id",
        "duration",
        "user_name"
      ],
      "matched_fields": [
        "user_id"
      ]
    },
    {
      "nl": "대출 기간이 7일 이상인 도서를 대출한 회원의 정보를 추가하세요.",
      "sql": "INSERT INTO 도서관_대출 (user_id, book_id, loan_date, return_date, user_name, book_title, duration) SELECT user_id, book_id, loan_date, DATE_ADD(loan_date, INTERVAL duration DAY), user_name, book_title, duration FROM 도서관_대출 WHERE duration >= 7;",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "book_title",
        "book_id",
        "duration",
        "user_name",
        "loan_date"
      ],
      "matched_fields": [
        "user_id"
      ]
    },
    {
      "nl": "연체료가 10000원 이상인 대출 기록을 가진 회원의 이름과 도서 제목을 입력하세요.",
      "sql": "INSERT INTO 도서관_대출 (user_id, book_id, loan_date, return_date, user_name, book_title, penalty_fee) SELECT user_id, book_id, loan_date, return_date, user_name, book_title, penalty_fee FROM 도서관_대출 WHERE penalty_fee >= 10000;",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "book_title",
        "penalty_fee",
        "book_id",
        "return_date",
        "user_name",
        "loan_date"
      ],
      "matched_fields": [
        "user_id"
      ]
    },
    {
      "nl": "대출 날짜가 2023년 1월 1일 이후인 도서 대출 기록을 추가하세요.",
      "sql": "INSERT INTO 도서관_대출 (user_id, book_id, loan_date, return_date, user_name, book_title) SELECT user_id, book_id, loan_date, return_date, user_name, book_title FROM 도서관_대출 WHERE loan_date > '2023-01-01';",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "book_title",
        "book_id",
        "return_date",
        "user_name",
        "loan_date"
      ],
      "matched_fields": [
        "user_id"
      ]
    },
    {
      "nl": "실제 반납 날짜가 대출 날짜보다 늦은 도서의 대출 정보를 입력하세요.",
      "sql": "INSERT INTO 도서관_대출 (user_id, book_id, loan_date, return_date, actual_return_date, user_name, book_title) SELECT user_id, book_id, loan_date, return_date, actual_return_date, user_name, book_title FROM 도서관_대출 WHERE actual_return_date > loan_date;",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "book_title",
        "book_id",
        "return_date",
        "actual_return_date",
        "user_name",
        "loan_date"
      ],
      "matched_fields": [
        "user_id"
      ]
    },
    {
      "nl": "도서 제목이 '파이썬'으로 시작하는 도서를 3권 대출하는 회원의 정보를 추가하세요.",
      "sql": "INSERT INTO 도서관_대출 (user_id, book_id, loan_date, return_date, user_name, book_title) SELECT user_id, book_id, loan_date, return_date, user_name, book_title FROM 도서관_대출 WHERE book_title LIKE '파이썬% LIMIT 3;",
      "dml": "INSERT",
      "db_success": false,
      "db_error": "1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''파이썬% LIMIT 3' at line 1",
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "반납 예정 날짜가 오늘 날짜보다 이전인 도서의 대출 기록을 입력하세요.",
      "sql": "INSERT INTO 도서관_대출 (user_id, book_id, loan_date, return_date, user_name, book_title) SELECT user_id, book_id, loan_date, return_date, user_name, book_title FROM 도서관_대출 WHERE return_date < CURRENT_DATE;",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "book_title",
        "book_id",
        "return_date",
        "user_name",
        "loan_date"
      ],
      "matched_fields": [
        "user_id"
      ]
    },
    {
      "nl": "회원의 연락처가 '010'으로 시작하는 대출 기록을 추가하세요.",
      "sql": "INSERT INTO 도서관_대출 (user_id, book_id, loan_date, return_date, user_name, phone) SELECT user_id, book_id, loan_date, return_date, user_name, phone FROM 도서관_대출 WHERE phone LIKE '010%';",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "book_id",
        "return_date",
        "phone",
        "user_name",
        "loan_date"
      ],
      "matched_fields": [
        "user_id"
      ]
    },
    {
      "nl": "상태가 '완료'인 대출 기록의 총 개수를 입력하세요.",
      "sql": "INSERT INTO 도서관_대출 (user_id, book_id, loan_date, return_date) SELECT user_id, book_id, loan_date, return_date FROM 도서관_대출 WHERE status = '완료';",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "status",
        "book_id",
        "return_date",
        "loan_date"
      ],
      "matched_fields": [
        "user_id"
      ]
    },
    {
      "nl": "대출 기간이 30일 이하이고, 연체료가 5000원 미만인 도서 대출 정보를 추가하세요.",
      "sql": "INSERT INTO 도서관_대출 (user_id, book_id, loan_date, return_date, duration, penalty_fee) SELECT user_id, book_id, loan_date, return_date, duration, penalty_fee FROM 도서관_대출 WHERE duration <= 30 AND penalty_fee < 5000;",
      "dml": "INSERT",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "penalty_fee",
        "book_id",
        "return_date",
        "duration",
        "loan_date"
      ],
      "matched_fields": [
        "user_id"
      ]
    },
    {
      "nl": "대출 상태가 '완료'인 기록의 연체료를 5000원으로 업데이트하시오.",
      "sql": "UPDATE 도서관_대출 SET penalty_fee = 5000 WHERE status = '완료';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "penalty_fee",
        "status"
      ],
      "matched_fields": []
    },
    {
      "nl": "대출 기간이 14일 이하인 도서의 대출 상태를 '비활성'으로 변경하시오.",
      "sql": "UPDATE 도서관_대출 SET status = '비활성' WHERE duration <= 14;",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "duration",
        "status"
      ],
      "matched_fields": []
    },
    {
      "nl": "회원 이름이 '홍길동'인 사용자의 이메일 주소를 'hong@example.com'으로 업데이트하시오.",
      "sql": "UPDATE 도서관_대출 SET email = 'hong@example.com' WHERE user_name = '홍길동';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "email",
        "user_name"
      ],
      "matched_fields": []
    },
    {
      "nl": "반납 예정 날짜가 오늘 이후인 대출 기록의 상태를 '대기'로 변경하시오.",
      "sql": "UPDATE 도서관_대출 SET status = '대기' WHERE return_date > CURDATE();",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "status",
        "return_date"
      ],
      "matched_fields": []
    },
    {
      "nl": "연체료가 1000원 이상인 대출의 결제 상태를 '완료'로 업데이트하시오.",
      "sql": "UPDATE 도서관_대출 SET payment_status = '완료' WHERE penalty_fee >= 1000;",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "penalty_fee",
        "payment_status"
      ],
      "matched_fields": []
    },
    {
      "nl": "대출 날짜가 2023년 1월 1일 이후인 기록들의 대출 기간을 30일로 변경하시오.",
      "sql": "UPDATE 도서관_대출 SET duration = 30 WHERE loan_date > '2023-01-01';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "duration",
        "loan_date"
      ],
      "matched_fields": []
    },
    {
      "nl": "회원 전화번호가 '01012345678'인 사용자들의 대출 상태를 '취소'로 업데이트하시오.",
      "sql": "UPDATE 도서관_대출 SET status = '취소' WHERE phone = '01012345678';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "phone",
        "status"
      ],
      "matched_fields": []
    },
    {
      "nl": "대출 상태가 '활성'인 도서들의 실제 반납 날짜를 오늘 날짜로 변경하시오.",
      "sql": "UPDATE 도서관_대출 SET actual_return_date = CURDATE() WHERE status = '활성';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "actual_return_date",
        "status"
      ],
      "matched_fields": []
    },
    {
      "nl": "대출 기간이 7일인 도서의 대출 상태를 '완료'로 업데이트하시오.",
      "sql": "UPDATE 도서관_대출 SET status = '완료' WHERE duration = 7;",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "duration",
        "status"
      ],
      "matched_fields": []
    },
    {
      "nl": "회원 이름이 '김철수'이고, 대출 상태가 '대기'인 기록의 연체료를 2000원으로 변경하시오.",
      "sql": "UPDATE 도서관_대출 SET penalty_fee = 2000 WHERE user_name = '김철수' AND status = '대기';",
      "dml": "UPDATE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [
        "penalty_fee",
        "user_name",
        "status"
      ],
      "matched_fields": []
    },
    {
      "nl": "대출 상태가 '완료'인 모든 기록을 삭제해 주세요.",
      "sql": "DELETE FROM `도서관_대출` WHERE `status` = '완료'",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "연체료가 100원 이상인 대출 기록을 삭제하고 싶습니다.",
      "sql": "DELETE FROM `도서관_대출` WHERE `penalty_fee` >= 100",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "대출 기간이 30일 이하인 대출 기록을 모두 삭제해 주세요.",
      "sql": "DELETE FROM `도서관_대출` WHERE `duration` <= 30",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "회원 이름이 '홍길동'인 모든 대출 기록을 삭제해주세요.",
      "sql": "DELETE FROM `도서관_대출` WHERE `user_name` = '홍길동'",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "대출 상태가 '취소'이고, 반납 예정 날짜가 오늘 이전인 기록을 삭제해주세요.",
      "sql": "DELETE FROM `도서관_대출` WHERE `status` = '취소' AND `return_date` < CURDATE()",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "연체료가 0원인 대출 기록을 삭제하고 싶습니다.",
      "sql": "DELETE FROM `도서관_대출` WHERE `penalty_fee` = 0",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "대출 날짜가 2023년 1월 1일 이전인 모든 대출 기록을 삭제해주세요.",
      "sql": "DELETE FROM `도서관_대출` WHERE `loan_date` < '2023-01-01'",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "회원 ID가 5인 대출 기록을 모두 삭제해 주세요.",
      "sql": "DELETE FROM `도서관_대출` WHERE `user_id` = 5",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "도서 제목에 'Python'이 포함된 대출 기록을 삭제하고 싶습니다.",
      "sql": "DELETE FROM `도서관_대출` WHERE `book_title` LIKE '%Python%'",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    },
    {
      "nl": "대출 상태가 '비활성'인 모든 대출 기록을 삭제해주세요.",
      "sql": "DELETE FROM `도서관_대출` WHERE `status` = '비활성'",
      "dml": "DELETE",
      "db_success": true,
      "db_error": null,
      "missing_fields": [],
      "matched_fields": []
    }
  ]
}